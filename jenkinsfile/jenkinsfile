pipeline {
    agent any
    
    tools {
        nodejs 'NodeJS' // Make sure you have NodeJS configured in Jenkins Global Tools
    }
    
    environment {
        NODE_ENV = 'development'
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                checkout scm
            }
        }
        
        stage('Install Dependencies') {
            steps {
                echo 'Installing Node.js dependencies...'
                sh 'npm install'
            }
        }
        
        stage('Lint Code') {
            steps {
                echo 'Running code linting...'
                // Skip if no linting configured
                script {
                    try {
                        sh 'npm run lint'
                    } catch (Exception e) {
                        echo 'No lint script found in package.json, skipping...'
                    }
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                echo 'Running tests...'
                script {
                    try {
                        sh 'npm test'
                    } catch (Exception e) {
                        echo 'No test script found in package.json, skipping...'
                    }
                }
            }
        }
        
        stage('Build') {
            steps {
                echo 'Building the application...'
                script {
                    try {
                        sh 'npm run build'
                    } catch (Exception e) {
                        echo 'No build script found in package.json, skipping...'
                    }
                }
            }
        }
        
        stage('Deploy') {
            steps {
                echo 'Deploying application...'
                // For learning purposes, just echo the deployment
                echo 'Application would be deployed here!'
                echo 'Current directory contents:'
                sh 'ls -la'
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline completed!'
            // Clean up workspace
            cleanWs()
        }
        
        success {
            echo 'Pipeline succeeded! üéâ'
        }
        
        failure {
            echo 'Pipeline failed! ‚ùå'
        }
        
        unstable {
            echo 'Pipeline is unstable! ‚ö†Ô∏è'
        }
    }
}